{"ast":null,"code":"var _jsxFileName = \"/home/jan/programming/chat_tutorial/client/src/components/Doko/Doko.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport './Doko.css';\nimport Infobar from '../Infobar/Infobar';\nimport Messages from '../Messages/Messages';\nimport Input from '../Input/Input';\nimport TextContainer from '../TextContainer/TextContainer';\nimport PlayerHand from '../PlayerHand/PlayerHand';\nimport PlayTable from '../PlayTable/PlayTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nconst Doko = ({\n  location\n}) => {\n  _s();\n\n  const SERVERENDPOINT = 'localhost:5000';\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [players, setPlayers] = useState('');\n  const [hand, setHand] = useState('');\n  const [trick, setTrick] = useState(['back', 'back', 'back', 'back']);\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    console.log(location);\n    setRoom(room);\n    setName(name);\n    socket = io(SERVERENDPOINT);\n    console.log(socket);\n    console.log('name: ' + name, ', room: ' + room);\n    socket.emit('join', {\n      name,\n      room\n    }, hand => {\n      setHand(hand);\n      console.log('hand' + hand);\n    });\n    return () => {\n      //  socket.emit('disconnect');\n      socket.close();\n    };\n  }, [SERVERENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n    socket.on('roomData', data => {\n      setPlayers(data.users); // setPlayers([\n      //     { id: \"sArAC_y3s6YyArImAAD_\", name: \"a\", room: \"r4\" }, \n      //     { id: \"s\", name: \"ab\", room: \"r4\" }])\n      //        setPlayers({players: data.users});\n      //        console.log('data.users.players')\n\n      console.log(data.users);\n    });\n  }, []);\n\n  const sendMessage = e => {\n    e.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  console.log(\"message: \" + message + \", messages: \" + messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerPlayTable\",\n      children: [/*#__PURE__*/_jsxDEV(Infobar, {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PlayTable, {\n        trick: trick,\n        players: players\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerPlayerHand\",\n      children: /*#__PURE__*/_jsxDEV(PlayerHand, {\n        hand: hand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n      players: players\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Doko, \"nph4nJS4ZmypcTIppRlEOLT6jFg=\");\n\n_c = Doko;\nexport default Doko;\n\nvar _c;\n\n$RefreshReg$(_c, \"Doko\");","map":{"version":3,"sources":["/home/jan/programming/chat_tutorial/client/src/components/Doko/Doko.js"],"names":["React","useState","useEffect","queryString","io","Infobar","Messages","Input","TextContainer","PlayerHand","PlayTable","socket","Doko","location","SERVERENDPOINT","name","setName","room","setRoom","message","setMessage","messages","setMessages","players","setPlayers","hand","setHand","trick","setTrick","parse","search","console","log","emit","close","on","data","users","sendMessage","e","preventDefault"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\n\nimport './Doko.css';\n\nimport Infobar from '../Infobar/Infobar'\nimport Messages from '../Messages/Messages'\nimport Input from '../Input/Input'\nimport TextContainer from '../TextContainer/TextContainer'\nimport PlayerHand from '../PlayerHand/PlayerHand'\nimport PlayTable from '../PlayTable/PlayTable'\n\nlet socket;\n\nconst Doko = ({location}) => {\n    const SERVERENDPOINT = 'localhost:5000';\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [players, setPlayers] = useState('');\n    const [hand, setHand] = useState('');\n    const [trick, setTrick] = useState(['back', 'back', 'back', 'back']);\n\n    useEffect(()=>{\n        const {name, room} = queryString.parse(location.search);\n        console.log(location);\n        setRoom(room);\n        setName(name);\n        socket = io(SERVERENDPOINT);\n        console.log(socket);\n        console.log('name: ' + name, ', room: ' + room)\n\n        socket.emit('join', {name, room}, (hand)=>{\n            setHand(hand);\n            console.log('hand'+hand);\n        });  \n        \n        return () => {\n          //  socket.emit('disconnect');\n            socket.close();\n        }\n        \n    }, [SERVERENDPOINT, location.search]);\n\n    useEffect(()=>{\n        socket.on('message', (message)=>{\n            setMessages([...messages, message]);\n            \n        });\n        socket.on('roomData', (data)=>{\n            setPlayers(data.users);\n            // setPlayers([\n            //     { id: \"sArAC_y3s6YyArImAAD_\", name: \"a\", room: \"r4\" }, \n            //     { id: \"s\", name: \"ab\", room: \"r4\" }])\n     //        setPlayers({players: data.users});\n     //        console.log('data.users.players')\n            console.log(data.users);\n\n        });\n    }, []);\n\n\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n        if (message){\n            socket.emit('sendMessage', message, ()=> setMessage(''));\n        }\n    }\n    console.log(\"message: \" + message + \", messages: \" + messages);\n    return(\n        <div className=\"outerContainer\">\n            <div className=\"containerPlayTable\">\n                <Infobar room={room} />\n                <PlayTable trick={trick} players={players}/>\n               \n\n            </div>\n            <div className=\"containerPlayerHand\">\n                <PlayerHand hand={hand}/>\n            </div>\n            <TextContainer players={players}/>\n        </div>\n    )\n}\n\nexport default Doko;\n"]},"metadata":{},"sourceType":"module"}