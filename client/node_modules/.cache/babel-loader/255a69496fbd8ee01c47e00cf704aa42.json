{"ast":null,"code":"var _jsxFileName = \"/home/jan/programming/chat_tutorial/client/src/components/Doko/Doko.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport './Doko.css';\nimport Infobar from '../Infobar/Infobar';\nimport TextContainer from '../TextContainer/TextContainer';\nimport PlayerHand from '../PlayerHand/PlayerHand';\nimport PlayTable from '../PlayTable/PlayTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nconst Doko = ({\n  location\n}) => {\n  _s();\n\n  const SERVERENDPOINT = 'localhost:5000';\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [players, setPlayers] = useState('');\n  const [hand, setHand] = useState('');\n  const [trick, setTrick] = useState(['back', 'back', 'back', 'back']);\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    console.log(location);\n    setRoom(room);\n    setName(name);\n    socket = io(SERVERENDPOINT);\n    console.log(socket);\n    console.log('name: ' + name, ', room: ' + room);\n    socket.emit('join', {\n      name,\n      room\n    }, hand => {\n      setHand(hand);\n      console.log('hand' + hand);\n    });\n    return () => {\n      //  socket.emit('disconnect');\n      socket.close();\n    };\n  }, [SERVERENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('roomData', data => {\n      setPlayers(data.users);\n      console.log(data.users);\n    });\n  }, []); // const sendMessage = (e) => {\n  //     e.preventDefault();\n  //     if (message){\n  //         socket.emit('sendMessage', message, ()=> setMessage(''));\n  //     }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerPlayTable\",\n      children: [/*#__PURE__*/_jsxDEV(Infobar, {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PlayTable, {\n        trick: trick,\n        players: players\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerPlayerHand\",\n      children: /*#__PURE__*/_jsxDEV(PlayerHand, {\n        hand: hand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n      players: players\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Doko, \"XDHV8tlV+L2HaXyAn0vGzdXvtPg=\");\n\n_c = Doko;\nexport default Doko;\n\nvar _c;\n\n$RefreshReg$(_c, \"Doko\");","map":{"version":3,"sources":["/home/jan/programming/chat_tutorial/client/src/components/Doko/Doko.js"],"names":["React","useState","useEffect","queryString","io","Infobar","TextContainer","PlayerHand","PlayTable","socket","Doko","location","SERVERENDPOINT","name","setName","room","setRoom","players","setPlayers","hand","setHand","trick","setTrick","parse","search","console","log","emit","close","on","data","users"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAGA,OAAO,YAAP;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AAGA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AACzB,QAAMC,cAAc,GAAG,gBAAvB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,CAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAM;AAACW,MAAAA,IAAD;AAAOE,MAAAA;AAAP,QAAeZ,WAAW,CAACoB,KAAZ,CAAkBZ,QAAQ,CAACa,MAA3B,CAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYf,QAAZ;AACAK,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAJ,IAAAA,MAAM,GAAGL,EAAE,CAACQ,cAAD,CAAX;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYjB,MAAZ;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWb,IAAvB,EAA6B,aAAaE,IAA1C;AAEAN,IAAAA,MAAM,CAACkB,IAAP,CAAY,MAAZ,EAAoB;AAACd,MAAAA,IAAD;AAAOE,MAAAA;AAAP,KAApB,EAAmCI,IAAD,IAAQ;AACtCC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAOP,IAAnB;AACH,KAHD;AAKA,WAAO,MAAM;AACX;AACEV,MAAAA,MAAM,CAACmB,KAAP;AACH,KAHD;AAKH,GAnBQ,EAmBN,CAAChB,cAAD,EAAiBD,QAAQ,CAACa,MAA1B,CAnBM,CAAT;AAqBAtB,EAAAA,SAAS,CAAC,MAAI;AAIVO,IAAAA,MAAM,CAACoB,EAAP,CAAU,UAAV,EAAuBC,IAAD,IAAQ;AAC1BZ,MAAAA,UAAU,CAACY,IAAI,CAACC,KAAN,CAAV;AAEAN,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAI,CAACC,KAAjB;AAEH,KALD;AAMH,GAVQ,EAUN,EAVM,CAAT,CA9ByB,CA4CzB;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACI,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEhB;AAAf;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEM,KAAlB;AAAyB,QAAA,OAAO,EAAEJ;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BACI,QAAC,UAAD;AAAY,QAAA,IAAI,EAAEE;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ,eAUI,QAAC,aAAD;AAAe,MAAA,OAAO,EAAEF;AAAxB;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAjED;;GAAMP,I;;KAAAA,I;AAmEN,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\n\nimport './Doko.css';\n\nimport Infobar from '../Infobar/Infobar'\n\n\nimport TextContainer from '../TextContainer/TextContainer'\nimport PlayerHand from '../PlayerHand/PlayerHand'\nimport PlayTable from '../PlayTable/PlayTable'\n\nlet socket;\n\nconst Doko = ({location}) => {\n    const SERVERENDPOINT = 'localhost:5000';\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n\n    const [players, setPlayers] = useState('');\n    const [hand, setHand] = useState('');\n    const [trick, setTrick] = useState(['back', 'back', 'back', 'back']);\n\n    useEffect(()=>{\n        const {name, room} = queryString.parse(location.search);\n        console.log(location);\n        setRoom(room);\n        setName(name);\n        socket = io(SERVERENDPOINT);\n        console.log(socket);\n        console.log('name: ' + name, ', room: ' + room)\n\n        socket.emit('join', {name, room}, (hand)=>{\n            setHand(hand);\n            console.log('hand'+hand);\n        });  \n        \n        return () => {\n          //  socket.emit('disconnect');\n            socket.close();\n        }\n        \n    }, [SERVERENDPOINT, location.search]);\n\n    useEffect(()=>{\n\n            \n\n        socket.on('roomData', (data)=>{\n            setPlayers(data.users);\n\n            console.log(data.users);\n\n        });\n    }, []);\n\n\n\n    // const sendMessage = (e) => {\n    //     e.preventDefault();\n    //     if (message){\n    //         socket.emit('sendMessage', message, ()=> setMessage(''));\n    //     }\n    // }\n\n    return(\n        <div className=\"outerContainer\">\n            <div className=\"containerPlayTable\">\n                <Infobar room={room} />\n                <PlayTable trick={trick} players={players}/>\n               \n\n            </div>\n            <div className=\"containerPlayerHand\">\n                <PlayerHand hand={hand}/>\n            </div>\n            <TextContainer players={players}/>\n        </div>\n    )\n}\n\nexport default Doko;\n"]},"metadata":{},"sourceType":"module"}