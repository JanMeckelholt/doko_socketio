{"ast":null,"code":"var _jsxFileName = \"/home/jan/programming/chat_tutorial/client/src/components/Chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport Infobar from '../Infobar/Infobar';\nimport Messages from '../Messages/Messages';\nimport Input from '../Input/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  _s();\n\n  const SERVERENDPOINT = 'localhost:5000';\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    console.log(location);\n    setRoom(room);\n    setName(name);\n    socket = io(SERVERENDPOINT);\n    console.log(socket);\n    console.log('name: ' + name, ', room: ' + room);\n    socket.emit('join', {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [SERVERENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = e => {\n    e.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  console.log(\"message: \" + message + \", messages: \" + messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Infobar, {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Messages, {\n        messages: messages,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        message: message,\n        setMessage: setMessage,\n        sendMessage: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"M7DGl/NqV6luCY8IpJPKHYFo+ZU=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/jan/programming/chat_tutorial/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","Infobar","Messages","Input","socket","Chat","location","SERVERENDPOINT","name","setName","room","setRoom","message","setMessage","messages","setMessages","parse","search","console","log","emit","off","on","sendMessage","e","preventDefault"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\n\nimport './Chat.css';\n\nimport Infobar from '../Infobar/Infobar'\nimport Messages from '../Messages/Messages'\nimport Input from '../Input/Input'\n\nlet socket;\n\nconst Chat = ({location}) => {\n    const SERVERENDPOINT = 'localhost:5000';\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n\n    useEffect(()=>{\n        const {name, room} = queryString.parse(location.search);\n        console.log(location);\n        setRoom(room);\n        setName(name);\n        socket = io(SERVERENDPOINT);\n        console.log(socket);\n        console.log('name: ' + name, ', room: ' + room)\n\n        socket.emit('join', {name, room}, ()=>{\n        });  \n        \n        return () => {\n            socket.emit('disconnect');\n            socket.off();\n        }\n        \n    }, [SERVERENDPOINT, location.search]);\n\n    useEffect(()=>{\n        socket.on('message', (message)=>{\n            setMessages([...messages, message]);\n        });\n    }, [messages]);\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n        if (message){\n            socket.emit('sendMessage', message, ()=> setMessage(''));\n        }\n    }\n    console.log(\"message: \" + message + \", messages: \" + messages);\n    return(\n        <div className=\"outerContainer\">\n            <div className=\"container\">\n                <Infobar room={room} />\n                <Messages messages={messages} name={name}/>\n                <Input message={message} setMessage={setMessage} sendMessage={sendMessage}/>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}