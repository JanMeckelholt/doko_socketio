{"ast":null,"code":"var _jsxFileName = \"/home/jan/programming/chat_tutorial/client/src/components/PlayTable/PlayTable.js\";\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport './PlayTable.css';\nimport TrickCard from './TrickCard/TrickCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardFolder = '/cards/';\n\nconst PlayTable = ({\n  trick,\n  players\n}) => {\n  console.log('players');\n  console.log(players);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playTable container\",\n    children: /*#__PURE__*/_jsxDEV(\"row\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-9\",\n        children: trick ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"activeContainer\",\n          children: trick.map((card, index) => {\n            const playerName = players[index] ? players[index].name : 'empty Chair';\n            return /*#__PURE__*/_jsxDEV(TrickCard, {\n              card: card,\n              player: playerName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 29\n            }, this) // console.log('user in room: ' + user.name)\n            ;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-1\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          children: \"Leave Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PlayTable;\nexport default PlayTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayTable\");","map":{"version":3,"sources":["/home/jan/programming/chat_tutorial/client/src/components/PlayTable/PlayTable.js"],"names":["React","Button","TrickCard","cardFolder","PlayTable","trick","players","console","log","map","card","index","playerName","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,OAAO,iBAAP;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;AACA,MAAMC,UAAU,GAAE,SAAlB;;AAIA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAsB;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,sBACA;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,2BACI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,kBACKD,KAAK,gBACF;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,oBACKA,KAAK,CAACI,GAAN,CAAW,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC7B,kBAAMC,UAAU,GAAGN,OAAO,CAACK,KAAD,CAAP,GAAiBL,OAAO,CAACK,KAAD,CAAP,CAAeE,IAAhC,GAAuC,aAA1D;AACA,gCACI,QAAC,SAAD;AAAW,cAAA,IAAI,EAAEH,IAAjB;AAAuB,cAAA,MAAM,EAAEE;AAA/B;AAAA;AAAA;AAAA;AAAA,oBADJ,CAEJ;AAFI;AAIH,WANI;AADL;AAAA;AAAA;AAAA;AAAA,gBADE,GAWF;AAZR;AAAA;AAAA;AAAA;AAAA,cADJ,eAeI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAwBH,CA3BD;;KAAMR,S;AA8BN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport { Button } from 'react-bootstrap';\n\nimport './PlayTable.css';\nimport TrickCard from './TrickCard/TrickCard';\nconst cardFolder= '/cards/'\n\n\n\nconst PlayTable = ({trick, players}) => {\n    console.log('players');\n    console.log(players);\n    return (\n    <div className=\"playTable container\">\n        <row>\n            <div className=\"col-9\">\n                {trick ? (\n                    <div className=\"activeContainer\">\n                        {trick.map ((card, index) => {\n                        const playerName = players[index] ? players[index].name : 'empty Chair';\n                        return (\n                            <TrickCard card={card} player={playerName}/>\n                    // console.log('user in room: ' + user.name)\n                        )\n                    })}\n                    </div>\n       \n                ) : null }\n            </div>\n            <div className=\"col-1\">\n                <button className=\"btn btn-primary\">Leave Table</button>\n            </div>\n        </row>\n       \n    </div>\n    )\n};\n    \n    \nexport default PlayTable;"]},"metadata":{},"sourceType":"module"}