{"ast":null,"code":"var _jsxFileName = \"/home/jan/programming/chat_tutorial/client/src/components/Chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client'; // import './Chat.css';\n\nimport Infobar from '../Infobar/Infobar';\nimport Messages from '../Messages/Messages';\nimport Input from '../Input/Input';\nimport TextContainer from '../TextContainer/TextContainer';\nimport PlayerHand from '../PlayerHand/PlayerHand';\nimport PlayTable from '../PlayTable/PlayTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  _s();\n\n  const SERVERENDPOINT = 'localhost:5000';\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState('');\n  const [hand, setHand] = useState('');\n  const [trick, setTrick] = useState(['back', 'back', 'back', 'back']);\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    console.log(location);\n    setRoom(room);\n    setName(name);\n    socket = io(SERVERENDPOINT);\n    console.log(socket);\n    console.log('name: ' + name, ', room: ' + room);\n    socket.emit('join', {\n      name,\n      room\n    }, hand => {\n      setHand(hand);\n    });\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [SERVERENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n    socket.on('roomData', ({\n      users\n    }) => {\n      setUsers(users);\n    });\n  }, []);\n\n  const sendMessage = e => {\n    e.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  console.log(\"message: \" + message + \", messages: \" + messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Infobar, {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Messages, {\n        messages: messages,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        message: message,\n        setMessage: setMessage,\n        sendMessage: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PlayTable, {\n      trick: trick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PlayerHand, {\n      hand: hand\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"H4qyLMDMIkngFJf9EoeCa8KAK2I=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/jan/programming/chat_tutorial/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","Infobar","Messages","Input","TextContainer","PlayerHand","PlayTable","socket","Chat","location","SERVERENDPOINT","name","setName","room","setRoom","message","setMessage","messages","setMessages","users","setUsers","hand","setHand","trick","setTrick","parse","search","console","log","emit","off","on","sendMessage","e","preventDefault"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\n\n// import './Chat.css';\n\nimport Infobar from '../Infobar/Infobar'\nimport Messages from '../Messages/Messages'\nimport Input from '../Input/Input'\nimport TextContainer from '../TextContainer/TextContainer'\nimport PlayerHand from '../PlayerHand/PlayerHand'\nimport PlayTable from '../PlayTable/PlayTable'\n\nlet socket;\n\nconst Chat = ({location}) => {\n    const SERVERENDPOINT = 'localhost:5000';\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [users, setUsers] = useState('');\n    const [hand, setHand] = useState('');\n    const [trick, setTrick] = useState(['back', 'back', 'back', 'back']);\n\n    useEffect(()=>{\n        const {name, room} = queryString.parse(location.search);\n        console.log(location);\n        setRoom(room);\n        setName(name);\n        socket = io(SERVERENDPOINT);\n        console.log(socket);\n        console.log('name: ' + name, ', room: ' + room)\n\n        socket.emit('join', {name, room}, (hand)=>{\n            setHand(hand);\n        });  \n        \n        return () => {\n            socket.emit('disconnect');\n            socket.off();\n        }\n        \n    }, [SERVERENDPOINT, location.search]);\n\n    useEffect(()=>{\n        socket.on('message', (message)=>{\n            setMessages([...messages, message]);\n            \n        });\n        socket.on('roomData', ({users})=>{\n            setUsers(users);\n        });\n    }, []);\n\n\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n        if (message){\n            socket.emit('sendMessage', message, ()=> setMessage(''));\n        }\n    }\n    console.log(\"message: \" + message + \", messages: \" + messages);\n    return(\n        <div className=\"outerContainer\">\n            <div className=\"container\">\n                <Infobar room={room} />\n                <Messages messages={messages} name={name}/>\n                <Input message={message} setMessage={setMessage} sendMessage={sendMessage}/>\n\n            </div>\n            <TextContainer users={users}/>\n            <PlayTable trick={trick}/>\n            <PlayerHand hand={hand}/>\n        </div>\n    )\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}