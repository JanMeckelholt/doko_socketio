{"ast":null,"code":"var _jsxFileName = \"/home/jan/programming/doko_socketio/client/src/components/PlayTable/PlayTable.js\";\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport './PlayTable.css';\nimport TrickCard from './TrickCard/TrickCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardFolder = '/cards/';\n\nconst PlayTable = ({\n  trick,\n  game,\n  dealCards\n}) => {\n  const handleClick = e => {\n    e.preventDefault();\n\n    if (e.target.id === 'startGame') {\n      dealCards('');\n    }\n\n    if (e.target.id === 'startGame') {\n      dealCards('Do you really want to abort the current game?');\n    } // const tempTrick =[...trick];\n    // const playerIndex = players.findIndex(p => p.id === player.id);\n    // tempTrick[playerIndex]= `${e.target.id}`;\n    // setTrick(tempTrick);\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container ml-3\",\n    children: trick && game && game.players ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-s-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: trick.map((card, index) => {\n            const playerName = game.players[index] ? game.players[index].name : 'empty Chair';\n            return /*#__PURE__*/_jsxDEV(TrickCard, {\n              kex: index,\n              card: card,\n              player: playerName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 37\n            }, this) // console.log('user in room: ' + user.name)\n            ;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-s-6 ml-5\",\n        children: [game.players.length >= trick.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: game.started ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Player to play Card: \", `${game.players[game.currentPlayerIndex].name}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"restartGame\",\n              disabled: game.players.length < trick.length,\n              onClick: handleClick,\n              className: \"btn btn-danger m-3\",\n              children: \"Abort Game and start new\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"startGame\",\n              disabled: game.players.length < trick.length,\n              onClick: handleClick,\n              className: \"btn btn-primary m-3\",\n              children: \"Start Game\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You need \", `${trick.length}`, \" players to start.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Invite more players to your room!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-warning m-3\",\n            children: \"Leave Table\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_c = PlayTable;\nexport default PlayTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayTable\");","map":{"version":3,"sources":["/home/jan/programming/doko_socketio/client/src/components/PlayTable/PlayTable.js"],"names":["React","Button","TrickCard","cardFolder","PlayTable","trick","game","dealCards","handleClick","e","preventDefault","target","id","players","map","card","index","playerName","name","length","started","currentPlayerIndex"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button } from 'react-bootstrap';\n\nimport './PlayTable.css';\nimport TrickCard from './TrickCard/TrickCard';\nconst cardFolder = '/cards/'\n\n\n\nconst PlayTable = ({ trick, game, dealCards }) => {\n    const handleClick = (e) =>{\n        e.preventDefault();\n        if (e.target.id === 'startGame') {\n            dealCards('');\n        }       \n        if (e.target.id === 'startGame') {\n            dealCards('Do you really want to abort the current game?');\n        }\n       \n        // const tempTrick =[...trick];\n        // const playerIndex = players.findIndex(p => p.id === player.id);\n        // tempTrick[playerIndex]= `${e.target.id}`;\n        // setTrick(tempTrick);\n    }\n\n    return (\n        <div className=\"container ml-3\">\n            {(trick && game && game.players) ? (\n                <div className=\"row \">\n                    <div className=\"col-s-6\">\n\n                        <div>\n\n                            {trick.map((card, index) => {\n                                const playerName = game.players[index] ? game.players[index].name : 'empty Chair';\n                                return (\n                                    <TrickCard kex={index} card={card} player={playerName} />\n                                    // console.log('user in room: ' + user.name)\n                                )\n                            })}\n                        </div>\n\n\n                    </div>\n                    <div className=\"col-s-6 ml-5\">\n\n\n                        {(game.players.length >= trick.length) ? (\n                            <div>\n                                {(game.started) ? (\n                                    <div>\n                                        <p>Player to play Card: {`${game.players[game.currentPlayerIndex].name}`}</p>\n                                        <button \n                                            id=\"restartGame\"\n                                            disabled={(game.players.length < trick.length)} \n                                            onClick={handleClick}\n                                            className=\"btn btn-danger m-3\">\n                                                Abort Game and start new\n                                        </button>\n                                    </div>\n                                ) : (\n                                    <div>\n                                        <button id=\"startGame\" disabled={(game.players.length < trick.length)} onClick={handleClick} className=\"btn btn-primary m-3\">Start Game</button>\n                                    </div>\n                                )}\n\n                            </div>\n                        )\n                            : (\n                                <div>\n                                    <p>You need {`${trick.length}`} players to start.</p>\n                                    <p>Invite more players to your room!</p>\n                                </div>\n                            )}\n                        <div>\n\n                            <button className=\"btn btn-warning m-3\">Leave Table</button>\n\n\n\n                            \n                        </div>\n                    </div>\n                </div>\n            ) : null}\n        </div>\n    )\n};\n\n\nexport default PlayTable;"]},"metadata":{},"sourceType":"module"}